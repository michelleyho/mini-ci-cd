name: Mini CI/CD Pipline

# Trigger Events
on: 
    push:
        branches: ["main"]
        tags: [ "*" ]
    pull_request:
        branches: ["main"]
    workflow_dispatch:

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: "3.10"

            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: Run tests
              run: |
                pytest src/tests --maxfail=1 --disable-warnings -q

    build-and-push:
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/main' || startswith(github.ref, 'refs/tags/')
        steps:
            - name: Checkout respository
              uses: actions/checkout@v4
            
            - name: Log into Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and Push Docker Image
              uses: docker/build-push-action@v5
              with:
                context: .
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/mini-ci-cd:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        if: startsWith(github.ref, 'refs/tags/')
        steps:
            - name: Manual approval before deploy
              uses: hmarr/auto-approve-action@v2
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Simulate deployment
              run: |
                echo "Deployment step triggered on tag ${GITHUB_REF#refs/tags/}"
                echo "Here you would pull and run docker image on staging or production."


